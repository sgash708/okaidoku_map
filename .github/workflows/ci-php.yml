name: ci-php

on:
  push:
    branches:
      - 'issues_**'
jobs:
  is-run-test:
    runs-on: ubuntu-latest
    outputs:
      RUN_PHPUNIT: ${{ steps.status_run_phpunit.outputs.RUN_PHPUNIT }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
            php:
              - './server/**/*.php'
      - id: status_run_phpunit
        run: |
          run_phpunit=`(test "${{ github.ref }}" = "refs/heads/master" || test "${{ github.ref }}" = "refs/heads/staging") || "${{ steps.changes.outputs.php }}" = "true"; echo $?`
          echo "::set-output name=RUN_PHPUNIT::$run_phpunit"

  build-and-test:
    runs-on: ubuntu-latest
    if: needs.is-run-test.outputs.RUN_PHPUNIT == '0'
    needs: is-run-test
    env:
      DB_PORT: 3306
      DB_DATABASE: test_database
      DB_USERNAME: db_user
      DB_PASSWORD: db_pass
      DB_HOST: 127.0.0.1

    services:
      mysql:
        image: mysql:5.7
        ports:
          - "3306:3306"
        env:
          MYSQL_USER: db_user
          MYSQL_PASSWORD: db_pass
          MYSQL_DATABASE: test_database
          MYSQL_ROOT_PASSWORD: root
          DB_PORT: 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        outputs:
          NOTICE_SLACK: ${{ steps.notice-slack.outputs.NOTICE_SLACK }}

    steps:
      - uses: actions/checkout@v2
      - name: cache composer
        id: vendor-cache
        uses: actions/cache@v1
        env:
          cache-name: cache-composer2
        with:
          path: ./server/vendor
          key: ${{ runner.os }}--${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: set up php8.0
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:v2

      - name: composer install
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        working-directory: ./server
        run: |
          php -d memory_limit=-1 /usr/bin/composer install -n --prefer-dist

      - name: prepare application
        working-directory: ./server
        run: |
          cp .env.example .env
          php artisan config:cache
          php artisan key:generate
          php artisan storage:link

      - name: migrate database
        working-directory: ./server
        run: php artisan migrate

      - name: Run PHPUnit
        working-directory: ./server
        run: ./vendor/bin/phpunit --configuration ./phpunit.xml -d memory_limit=-1